pipeline {
    agent any

    environment {
        imagename = "fedjuchek/hw-final-assignment"
        registryCredential = 'fedjuchek-dockerhub'
        dockerImage = ''
    }

    stages {
        stage('Git clone') {
            steps {
                checkout scm
            }
        }
        stage('Apply Terraform files') {
                steps {
                    withAWS(credentials: 'fediuchek-aws', region: 'us-east-1') {
                            dir("app-sources/deploy") {
                                sh 'aws eks --profile default --region us-east-1 update-kubeconfig --name hw-eks-cluster'
                                sh 'kubectl apply -f deployment.yaml'
                                sh 'kubectl apply -f ingress.yaml'
                        }
                    }   
                }   
        }
        stage('Trigger version update') {
                steps {
                    dir("app-sources/deploy") {
                    sh "kubectl set image deployments/k8s-app-deployment-1 k8s-app-1=fedjuchek/hw-final-assignment:${params.DEPLOY_APP_VERSION}"
                    sh "kubectl set image deployments/k8s-app-deployment-2 k8s-app-2=fedjuchek/hw-final-assignment:${params.DEPLOY_APP_VERSION}"
                    sh "kubectl set image deployments/k8s-app-deployment-3 k8s-app-3=fedjuchek/hw-final-assignment:${params.DEPLOY_APP_VERSION}"
                    sh "kubectl set image deployments/k8s-app-deployment-4 k8s-app-4=fedjuchek/hw-final-assignment:${params.DEPLOY_APP_VERSION}"
                }
            }
        }
    }
}